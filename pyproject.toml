[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]
include = [
    "app.py",
    "README.md",
    "requirements.txt"
]

[project]
name = "about_me_chatbot"
version = "0.1.0"
description = "A chatbot application"
readme = "README.md"
requires-python = ">=3.10,<4.0"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["chatbot", "ai", "python"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "gradio>=5.0.0",
    "langchain>=0.3.0",
    "langchain-community>=0.3.0",
    "langchain-openai>=0.3.0",
    "langchain-anthropic>=0.3.0",
    "openai>=1.0.0",
    "anthropic>=0.50.0",
    "google-generativeai>=0.8.0",
    "google-genai>=1.0.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "pypdf>=3.17.0",
    "pdfplumber>=0.10.0",
    "pdf2image>=1.16.0",
    "pillow>=10.0.0",
    "openai-agents>=0.2.10",
    "agentsdk-gemini-adapter>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/anout_me_chatbot"
Repository = "https://github.com/yourusername/anout_me_chatbot.git"
Issues = "https://github.com/yourusername/anout_me_chatbot/issues"

[project.scripts]
anout-me-chatbot = "app:main"

[tool.uv]
# Optional: add dev-only tools here; you can also add them via `uv add --dev ...`
dev-dependencies = []

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

